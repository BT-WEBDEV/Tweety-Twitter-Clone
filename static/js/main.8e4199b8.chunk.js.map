{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","tweets/create.js","profiles/components.js","tweets/detail.js","tweets/feed.js","tweets/list.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","console","log","withCredentials","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","content","ref","required","UserLink","children","UserDisplay","user","includeFullName","nameDisplay","first_name","last_name","Fragment","UserPicture","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","FeedList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetsList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.8e4199b8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n          const cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;  \r\n  if (data) {\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n  \r\n  if (csrftoken && method === \"POST\") {\r\n    console.log(csrftoken)\r\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n    xhr.withCredentials = true\r\n  }\r\n  \r\n  xhr.onload = function() {\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail\r\n      if (detail === \"Authentication credentials were not provided.\"){\r\n        if (window.location.href.indexOf(\"login\") === -1) {\r\n          window.location.href = \"/login?showLoginRequired=true\"\r\n        }\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = function (e) {\r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }\r\n  console.log(jsonData)\r\n  xhr.send(jsonData)\r\n}\r\n\r\n","import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n    backendLookup(\"POST\",\"/tweets/create/\", callback, {content: newTweet})\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n    const data = {id: tweetId, action: action}\r\n    backendLookup(\"POST\",\"/tweets/action/\", callback, data)\r\n}\r\n  \r\nexport function apiTweetDetail(tweetId, callback) {\r\n    backendLookup(\"GET\", `/tweets/${tweetId}`, callback)\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n    let endpoint = \"/tweets/feed/\"\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        // IN PRODUCTION REPLACE URL STRING WITH PROPER URL\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\") \r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint = \"/tweets/\"\r\n    if (username) {\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        // IN PRODUCTION REPLACE URL STRING WITH PROPER URL\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\") \r\n    }\r\n\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}","import React from 'react' \r\n\r\nimport {apiTweetAction} from './lookup'\r\n\r\nexport function ActionBtn(props) {\r\n    const {tweet, action, didPerformAction} = props\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className ? props.className: 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    \r\n    const handleActionBackendEvent = (response, status) => {\r\n      console.log(response, status)\r\n      if ((status === 200 || status === 201) && didPerformAction) {\r\n        didPerformAction(response, status)\r\n      }\r\n      \r\n    }\r\n    const handleClick = (event) => { \r\n        event.preventDefault()\r\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n        \r\n    }\r\n\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}`: actionDisplay\r\n    return <button className={className} onClick={handleClick}> {display} </button>\r\n  }","import React from 'react' \r\nimport {apiTweetCreate, } from './lookup'\r\n\r\n\r\nexport function TweetCreate(props){\r\n  const textAreaRef = React.createRef()\r\n  const {didTweet} = props\r\n  const handleBackendUpdate = (response, status) => {\r\n    if (status === 201) {\r\n      didTweet(response)\r\n    } else {\r\n      console.log(response)\r\n      alert (\"An error occurred please try again!\")\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newVal = textAreaRef.current.value\r\n    // backend api request\r\n    apiTweetCreate(newVal, handleBackendUpdate)\r\n    textAreaRef.current.value = ' '\r\n  }\r\n\r\n  return <div className={props.className}> \r\n          <form onSubmit={handleSubmit}> \r\n            <textarea ref={textAreaRef}required={true} className='form-control' name='tweet'> \r\n\r\n            </textarea> \r\n            <button type='submit' className='btn btn-primary my-3'> Tweet </button>\r\n          </form> \r\n  </div>\r\n }","import React from 'react' \r\n\r\n\r\n/// HANDLES THE USERNAME LINK ON TWEET DISPLAY\r\nexport function UserLink(props) {\r\n  const {username} = props \r\n  const handleUserLink = (event) => {\r\n      window.location.href=`/profiles/${username}`\r\n  }\r\n  return <span className='pointer' onClick={handleUserLink}> \r\n    {props.children}\r\n  </span>\r\n}\r\n\r\n/// HANDLES THE OVERALL USER DISPLAY ON A TWEET\r\nexport function UserDisplay(props) {\r\n    const {user, includeFullName} = props \r\n\r\n    if(user === undefined) {\r\n      return <div>Loading... </div> \r\n    }\r\n\r\n    const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\r\n    \r\n\r\n    return <React.Fragment> \r\n      {nameDisplay}\r\n      <UserLink username={user.username}> @{user.username} </UserLink> \r\n    </React.Fragment>\r\n  }\r\n\r\n/// HANDLES THE USER PICTURE AND LINKS IT TO USER PROFILE ON TWEET DISPLAY\r\nexport function UserPicture(props) {\r\n  const {user} = props\r\n\r\n  if(user === undefined) {\r\n    return <div>Loading... </div> \r\n  }\r\n\r\n  return <UserLink username={user.username}><span className= 'mx-1 px-3 py-2 rounded-circle bg-dark text-white'> \r\n    {user.username[0]}\r\n  </span> </UserLink>\r\n}\r\n\r\n\r\n","import React, {useState} from 'react' \r\n\r\nimport {ActionBtn} from './buttons'\r\n\r\nimport {\r\n  UserDisplay, \r\n  UserPicture\r\n} from '../profiles'\r\n\r\n\r\nexport function ParentTweet(props) {\r\n    const {tweet} = props\r\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '}tweet={tweet.parent} /> :null \r\n  }\r\n  \r\nexport function Tweet(props) {\r\n    const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\r\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n    let className = props.className ? props.className: 'col-10 mx-auto col-md-6'\r\n    className = isRetweet === true ? `${className} p-2 border rounded` : className\r\n    const path = window.location.pathname\r\n    const match = path.match(/(?<tweetid>\\d+)/)\r\n    const urlTweetId = match ? match.groups.tweetid : -1 \r\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n    \r\n    const handleLink = (event) => {\r\n      event.preventDefault()\r\n      window.location.href= `/${tweet.id}`\r\n    }\r\n\r\n    const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200) {\r\n          setActionTweet(newActionTweet)\r\n        } else if (status === 201) {\r\n          if (didRetweet) {\r\n            didRetweet(newActionTweet)\r\n          }\r\n        }\r\n      }\r\n      return <div className={className}>\r\n        {isRetweet === true && <div className='mb-2'> \r\n          <span className='small text-muted'> Retweet via <UserDisplay user={retweeter}/> </span>\r\n        </div> }  \r\n        <div className='d-flex'>\r\n          <div className= ' '>\r\n            <UserPicture user={tweet.user} />  \r\n          </div>\r\n          <div className= 'col-11'>  \r\n            <div> \r\n              <p>\r\n                  <UserDisplay includeFullName user={tweet.user} /> \r\n              </p> \r\n              <p> {tweet.id} - {tweet.content} </p>\r\n              <ParentTweet tweet={tweet} retweeter={tweet.user}/> \r\n            </div> \r\n            <div className='btn btn-group px-0'>\r\n            {(actionTweet && hideActions !== true) && <React.Fragment> \r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"like\", display:\"Likes\"}}/>\r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"unlike\", display:\"Unlike\"}}/>\r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"retweet\", display:\"Retweet\"}}/>    \r\n              </React.Fragment> \r\n            }\r\n              {isDetail === true ? null : <button className='btn btn-outline-primary btn-small' onClick={handleLink}> View </button>}\r\n              </div>\r\n          \r\n          </div> \r\n        </div> \r\n      </div> \r\n    }","import React, {useEffect, useState} from 'react' \r\n\r\nimport {apiTweetFeed} from './lookup'\r\n\r\nimport {Tweet} from './detail'\r\n\r\nexport function FeedList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n\r\n    useEffect(() => {\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false) {\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200) {\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          } \r\n        }\r\n        apiTweetFeed(handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n  \r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) => {\r\n          if (status === 200) {\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          } \r\n        }\r\n        apiTweetFeed(handleLoadNextResponse, nextUrl) \r\n      }\r\n    }\r\n\r\n    return <React.Fragment> {tweets.map((item, index) => {\r\n      return <Tweet \r\n        tweet={item} \r\n        didRetweet = {handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item-id}`}/> \r\n    }) }\r\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-primary'> Load Next </button> }\r\n    </React.Fragment>\r\n  }","import React, {useEffect, useState} from 'react' \r\nimport {apiTweetList} from './lookup'\r\n\r\nimport {Tweet} from './detail'\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n\r\n    useEffect(() => {\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false) {\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200) {\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          } else {\r\n            alert(\"There was an error!\")\r\n          }\r\n          setTweetsInit(response)\r\n        }\r\n        apiTweetList(props.username, handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n  \r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) => {\r\n          if (status === 200) {\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          } else {\r\n            alert(\"There was an error!\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl) \r\n      }\r\n    }\r\n\r\n    return <React.Fragment> {tweets.map((item, index) => {\r\n      return <Tweet \r\n        tweet={item} \r\n        didRetweet = {handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item-id}`}/> \r\n    }) }\r\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-primary'> Load Next </button> }\r\n    </React.Fragment>\r\n  }","import React, {useEffect, useState} from 'react' \r\n\r\nimport {TweetCreate} from './create'\r\nimport {Tweet} from './detail'\r\nimport {apiTweetDetail} from './lookup'\r\nimport {FeedList} from './feed'\r\nimport {TweetsList} from './list'\r\n\r\nexport function FeedComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([])\r\n  const canTweet = props.canTweet === \"false\" ? false : true\r\n  const handleNewTweet = (newTweet) => {\r\n    //backend api response handler\r\n    let tempNewTweets = [...newTweets]\r\n    tempNewTweets.unshift(newTweet)\r\n    setNewTweets(tempNewTweets)\r\n  }\r\n\r\n  return <div className={props.className}> \r\n            {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/> }\r\n            <FeedList newTweets={newTweets} {...props} /> \r\n          </div> \r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = props.canTweet === \"false\" ? false : true\r\n    const handleNewTweet = (newTweet) => {\r\n      //backend api response handler\r\n      let tempNewTweets = [...newTweets]\r\n      tempNewTweets.unshift(newTweet)\r\n      setNewTweets(tempNewTweets)\r\n    }\r\n\r\n    return <div className={props.className}> \r\n            {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/> }\r\n            <TweetsList newTweets={newTweets} {...props} /> \r\n          </div> \r\n}\r\n\r\nexport function TweetDetailComponent(props) {\r\n    const {tweetId} = props\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [tweet, setTweet] = useState(null)\r\n\r\n    const handleBackendLookup = (response, status) => {\r\n      if (status === 200) {\r\n        setTweet(response)\r\n      } else {\r\n        alert(\"There was an error finding your tweet.\")\r\n      }\r\n    }\r\n\r\n    useEffect(() => {\r\n      if (didLookup === false) {\r\n        apiTweetDetail(tweetId, handleBackendLookup)\r\n        setDidLookup(true)\r\n      }\r\n    }, [tweetId, didLookup, setDidLookup])\r\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className}/> \r\n}","import React from 'react'; \nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n           <TweetsComponent/> \n        </div> \n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {FeedComponent, TweetsComponent, TweetDetailComponent} from './tweets'\nimport reportWebVitals from './reportWebVitals';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(<App />, appEl)\n}\nconst e = React.createElement\nconst tweetsEl = document.getElementById(\"tweety\")\nif (tweetsEl) {\n  ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl); \n}\n\nconst tweetFeedEl = document.getElementById(\"tweety-feed\")\nif (tweetsEl) {\n  ReactDOM.render(\n    e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl); \n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweety-detail\")\n\ntweetDetailElements.forEach(container => {\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset), container); \n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
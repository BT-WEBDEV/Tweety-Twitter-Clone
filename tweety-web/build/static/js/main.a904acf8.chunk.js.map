{"version":3,"sources":["logo.svg","lookup/components.js","tweets/buttons.js","tweets/lookup.js","tweets/create.js","tweets/detail.js","tweets/list.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","console","log","withCredentials","onload","status","response","detail","window","location","href","onerror","e","send","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","content","ref","required","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","Fragment","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","username","apiTweetList","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.a904acf8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n          const cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;  \r\n  if (data) {\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n  \r\n  if (csrftoken && method === \"POST\") {\r\n    console.log(csrftoken)\r\n    xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n    xhr.withCredentials = true\r\n  }\r\n  \r\n  xhr.onload = function(){\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail\r\n      if (detail === \"Authentication credentials were not provided.\") {\r\n        window.location.href = \"/login?showLoginRequired=true\"\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = function (e) {\r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }\r\n  console.log(jsonData)\r\n  xhr.send(jsonData)\r\n}\r\n\r\n","import React from 'react' \r\n\r\nimport {apiTweetAction} from './lookup'\r\n\r\nexport function ActionBtn(props) {\r\n    const {tweet, action, didPerformAction} = props\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className ? props.className: 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    \r\n    const handleActionBackendEvent = (response, status) => {\r\n      console.log(response, status)\r\n      if ((status === 200 || status === 201) && didPerformAction) {\r\n        didPerformAction(response, status)\r\n      }\r\n      \r\n    }\r\n    const handleClick = (event) => { \r\n        event.preventDefault()\r\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n        \r\n    }\r\n\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}`: actionDisplay\r\n    return <button className={className} onClick={handleClick}> {display} </button>\r\n  }","import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n    backendLookup(\"POST\",\"/tweets/create/\", callback, {content: newTweet})\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n    const data = {id: tweetId, action: action}\r\n    backendLookup(\"POST\",\"/tweets/action/\", callback, data)\r\n}\r\n  \r\nexport function apiTweetDetail(tweetId, callback) {\r\n    backendLookup(\"GET\", `/tweets/${tweetId}`, callback)\r\n}\r\n\r\nexport function apiTweetList(username, callback) {\r\n    let endpoint = \"/tweets/\"\r\n    if (username) {\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}","import React from 'react' \r\nimport {apiTweetCreate, } from './lookup'\r\n\r\n\r\nexport function TweetCreate(props){\r\n  const textAreaRef = React.createRef()\r\n  const {didTweet} = props\r\n  const handleBackendUpdate = (response, status) => {\r\n    if (status === 201) {\r\n      didTweet(response)\r\n    } else {\r\n      console.log(response)\r\n      alert (\"An error occurred please try again!\")\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newVal = textAreaRef.current.value\r\n    // backend api request\r\n    apiTweetCreate(newVal, handleBackendUpdate)\r\n    textAreaRef.current.value = ' '\r\n  }\r\n\r\n  return <div className={props.className}> \r\n          <form onSubmit={handleSubmit}> \r\n            <textarea ref={textAreaRef}required={true} className='form-control' name='tweet'> \r\n\r\n            </textarea> \r\n            <button type='submit' className='btn btn-primary my-3'> Tweet </button>\r\n          </form> \r\n  </div>\r\n }","import React, {useState} from 'react' \r\n\r\nimport {ActionBtn} from './buttons'\r\n\r\nexport function ParentTweet(props) {\r\n    const {tweet} = props\r\n    return tweet.parent ? <div className='row'>\r\n    <div className='col-11 mx-auto p-3 border rounded'>\r\n      <p className='mb-O text-muted small'>Retweet</p>\r\n      <Tweet hideActions className={' '}tweet={tweet.parent} />\r\n    </div>\r\n    </div> : null \r\n  }\r\n  \r\nexport function Tweet(props) {\r\n    const {tweet, didRetweet, hideActions} = props\r\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n    const className = props.className ? props.className: 'col-10 mx-auto col-md-6'\r\n    const path = window.location.pathname\r\n    const match = path.match(/(?<tweetid>\\d+)/)\r\n    const urlTweetId = match ? match.groups.tweetid : -1 \r\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n    \r\n    const handleLink = (event) => {\r\n      event.preventDefault()\r\n      window.location.href= `/${tweet.id}`\r\n    }\r\n\r\n    const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200) {\r\n          setActionTweet(newActionTweet)\r\n        } else if (status === 201) {\r\n          if (didRetweet) {\r\n            didRetweet(newActionTweet)\r\n          }\r\n        }\r\n      }\r\n      return <div className={className}>\r\n        <div>  \r\n          <p> {tweet.id} - {tweet.content} </p>\r\n          <ParentTweet tweet={tweet}/> \r\n        </div> \r\n         <div className='btn btn-group'>\r\n         {(actionTweet && hideActions !== true) && <React.Fragment> \r\n            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"like\", display:\"Likes\"}}/>\r\n            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"unlike\", display:\"Unlike\"}}/>\r\n            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"retweet\", display:\"Retweet\"}}/>    \r\n          </React.Fragment> \r\n         }\r\n          {isDetail === true ? null : <button className='btn btn-outline-primary btn-small' onClick={handleLink}> View </button>}\r\n          </div>\r\n      \r\n      </div> \r\n    }","import React, {useEffect, useState} from 'react' \r\nimport {apiTweetList} from './lookup'\r\n\r\nimport {Tweet} from './detail'\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n\r\n    useEffect(() => {\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false) {\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200) {\r\n            setTweetsInit(response)\r\n            setTweetsDidSet(true)\r\n          } else {\r\n            alert(\"There was an error!\")\r\n          }\r\n          setTweetsInit(response)\r\n        }\r\n        apiTweetList(props.username, handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n  \r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n    return tweets.map((item, index) => {\r\n      return <Tweet \r\n        tweet={item} \r\n        didRetweet = {handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item-id}`}/> \r\n    }) \r\n  \r\n  }","import React, {useEffect, useState} from 'react' \r\n\r\nimport {TweetCreate} from './create'\r\nimport {Tweet} from './detail'\r\nimport {apiTweetDetail} from './lookup'\r\nimport {TweetsList} from './list'\r\n\r\n\r\nexport function TweetsComponent(props) {\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = props.canTweet === \"false\" ? false : true\r\n    const handleNewTweet = (newTweet) => {\r\n      //backend api response handler\r\n      let tempNewTweets = [...newTweets]\r\n      tempNewTweets.unshift(newTweet)\r\n      setNewTweets(tempNewTweets)\r\n    }\r\n\r\n    return <div className={props.className}> \r\n            {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/> }\r\n            <TweetsList newTweets={newTweets} {...props} /> \r\n          </div> \r\n}\r\n\r\nexport function TweetDetailComponent(props) {\r\n    const {tweetId} = props\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [tweet, setTweet] = useState(null)\r\n\r\n    const handleBackendLookup = (response, status) => {\r\n      if (status === 200) {\r\n        setTweet(response)\r\n      } else {\r\n        alert(\"There was an error finding your tweet.\")\r\n      }\r\n    }\r\n\r\n    useEffect(() => {\r\n      if (didLookup === false) {\r\n        apiTweetDetail(tweetId, handleBackendLookup)\r\n        setDidLookup(true)\r\n      }\r\n    }, [tweetId, didLookup, setDidLookup])\r\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className}/> \r\n}","import React from 'react'; \nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n           <TweetsComponent/> \n        </div> \n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {TweetsComponent, TweetDetailComponent} from './tweets'\nimport reportWebVitals from './reportWebVitals';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(<App />, appEl)\n}\nconst e = React.createElement\nconst tweetsEl = document.getElementById(\"tweety\")\nif (tweetsEl) {\n  ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl); \n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweety-detail\")\n\ntweetDetailElements.forEach(container => {\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset), container); \n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}